{"name":"Rivus CEP","tagline":"Complex event processing in Erlang","body":"#Rivus CEP\r\n\r\nRivus CEP is an Erlang library for complex event processing. It uses a declarative SQL-like DSL for processing the events.\r\n\r\nWith Rivus you can do things like:\r\n\r\n```\r\nselect \r\n    ev1.eventparam1, ev2.eventparam2, sum(ev2.eventparam3) \r\nfrom \r\n    event1 as ev1, event2 as ev2\r\nwhere \r\n    ev1.eventparam2 = ev2.eventparam2\r\nwithin 60 seconds\r\n```\r\n\r\nor 'select' events from pattern:\r\n\r\n```\r\nselect \r\n    ev1.eventparam1, ev2.eventparam2, ev2.eventparam3, ev2.eventparam4\r\nfrom \r\n    event1 as ev1 -> event2 as ev2\r\nwhere \r\n    ev1.eventparam2 = ev2.eventparam2\r\nwithin 60 seconds\r\n```\r\n\r\nIn the second query, the result will be generated only in case when event2 stricltly follows event1, within a 60 seconds window.\r\n\r\nFor each continuous query statement, similar to the above, a gen\\_server or gen\\_fsm \\(in case of \"pattern matching\" query\\) module will be created, using an [ErlyDTL](https://github.com/erlydtl/erlydtl) template. \r\n\r\nInternally, the events are stored in an ETS-based sliding window. DSL statments are translated to Erlang \"match specifications\" and QLC queries, which are embedded in the template.\r\n\r\nTemplate-generated module will register itself to the  [gproc](https://github.com/uwiger/gproc) process registry, for the events listed in the \"from\" clause. To send events, gproc:send() should be used. Once sent, each event will be received by multiple subscibers (query modules).\r\n\r\nFor each event type there must be a module implementing the 'event' behavior with the same name used in the \"from\" clause. The important function that needs to be implemented is - get\\_param\\_by\\_name(Event, ParamName).\r\n\r\nSee the unit tests for details how to use the library. There are several DSL examples too.\r\n\r\n###Current limitations\r\n\r\nThe project is in its infancy, so there are a number of limitations:\r\n\r\n- avg() aggregation is yet to be implemented;\r\n- using event aliases is mandatory;\r\n- only sliding windows are supported (no 'batch' windows);\r\n- no benchmarks at all;\r\n- extensive testing needed.\r\n\r\n###Contributions\r\n\r\nContributions and suggestions are most appreciated!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}